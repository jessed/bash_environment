# ~/.bashrc

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

test -f /etc/bashrc       && . /etc/bashrc        # system-wide bashrc
test -f ~/.bash_aliases   && . ~/.bash_aliases    # bash aliases
test -f ~/.bash_functions && . ~/.bash_functions  # bash utility functions

# Add to what is defined in /etc/environment
if [ ! $PATHSRCD ]; then
  PATH="$HOME/local/bin:$PATH:/sbin:/usr/sbin:/usr/local/sbin"

  # Add wireshark path
  test -d /Applications/Wireshark.app/Contents/MacOS/ && { 
    PATH="$PATH:/Applications/Wireshark.app/Contents/MacOS/"
  }

  # Add Soulver path
  test -d /Applications/Soulver\ 3.app/Contents/MacOS/CLI && { 
    PATH="$PATH:/Applications/Soulver 3.app/Contents/MacOS/CLI"
  }

  # Terraform extensions
  PATH="$PATH:$HOME/.krew/bin"

  export PATHSRCD=1
fi

# create ~/.HISTORY if it doesn't already exist
test -d $HOME/.HISTORY || mkdir $HOME/.HISTORY

# bash history variables/settings
export HISTFILE="$HOME/.HISTORY/$(date +%Y-%m).bash_history"
export HISTCONTROL=ignoredups
# equivalent to "%H:%M:%S"
export HISTTIMEFORMAT="%F %T  "
export HISTFILESIZE=300000
export HISTSIZE=300000
export HISTIGNORE="&:ls:[bf]g:exit"

## Environment variables
export EDITOR=vim
export VISUAL=vim
export FCEDIT=vim
export KUBE_EDITOR=vim
export HOSTFILE=/etc/hosts    # should allow for hostname completion

# path to ssh-agent sock file
export SSH_AUTH_SOCK=$HOME/.ssh/screen-ssh-agent

# clean up ssh environment if the ssh sock file doesn't exist
# this function is located in ~/.bash_functions
update_ssh_env


# Bash options
shopt -s checkwinsize # update the values of LINES and COLUMNS.
shopt -s histappend   # Append to the history file, do not overwite
shopt -s cmdhist      # save multi-line commands
shopt -s hostcomplete # attempt to perform hostname completion following a '@' sign

# Use VI mode
set -o vi

# Define color variables for the 'ls' command
export CLICOLOR
export CLICOLOR_FORCE
export LSCOLORS=ExGxfxBxCxDxDxhbHbacad

## custom prompt color variables
PROMPT_DIRTRIM=4
TITLE="\[\e]0;\u@\h\a"
SCRN='\[\ek$(echo -n M${WINDOW})\e\\\]'
BLINK="\[\e[5m\]"
CLR="\[\e[0m\]"
GREEN="\[\e[0;32m\]"
RED="\[\e[0;31m\]"
BLUE="\[\e[0;34m\]"
CYAN="\[\e[0;36m\]"
PURPLE="\[\e[0;35m\]"
BROWN="\[\e[0;33m\]"
LTBLUE="\[\e[1;34m\]"
LTGREEN="\[\e[1;32m\]"
LTRED="\[\e[1;31m\]"
LTCYAN="\[\e[1;36m\]"
YELLOW="\[\e[1;33m\]"
WHITE="\[\e[1;37m\]"

#custom prompt
mk_prompt () {
  if [ `id -u` -eq '0' ]; then
    COLOR=${RED}
    #COLOR=${RED}${BLINK}
  else
    COLOR=${GREEN}
  fi

  # Change prompt if operating in a screen window
  if [[ -n "$WINDOW" ]]; then
    PS1="${TITLE}${COLOR}${SCRN}\h:\w >${CLR}"
  else
    #PS1="${TITLE}${RED}[${CYAN}\A${RED}]${CLR}\n${COLOR}\h:\w >${CLR}"   # single-line
    #PS1="${TITLE}${RED}[${CYAN}\A${RED}]${CLR}${COLOR} \h:\w${CLR}\n$ "  # multi-line
    PS1="${TITLE}${COLOR}\w${CLR}\n${RED}[${CYAN}\A${RED}]${COLOR} \h${CLR} $ "  # multi-line w/hostname on prompt
  fi

  # Update the Go env variables
  # TODO: This should be changed to use direnv, not a bash function
  update_go
}
export PROMPT_COMMAND="history -a; mk_prompt"



# Enable bash-completion (brew package)
export BASH_COMPLETION_COMPAT_DIR=/usr/local/etc/bash_completion.d
test -f /usr/local/etc/profile.d/bash_completion.sh && source /usr/local/etc/profile.d/bash_completion.sh

### MANAGED BY RANCHER DESKTOP START (DO NOT EDIT)
export PATH="/Users/driskill/.rd/bin:$PATH"
### MANAGED BY RANCHER DESKTOP END (DO NOT EDIT)

# Keep this as the final action in .bashrc
test -e ~/.bash_local.bash && . ~/.bash_local.bash      # programming and shell expansion support

